[{"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/App.tsx":"1","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/components/SiteHeader/SiteHeader.tsx":"2","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/components/SiteHeader/index.ts":"3","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/containers/Layout/Layout.tsx":"4","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/containers/Layout/index.ts":"5","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/index.tsx":"6","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/router/routes.ts":"7","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/store/catalog/atoms.ts":"8","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/store/catalog/selectors.ts":"9","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppDetail/AppDetail.tsx":"10","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppDetail/index.ts":"11","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppList/AppList.tsx":"12","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppList/index.ts":"13","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/webpack.development.config.ts":"14","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/webpack.production.config.ts":"15"},{"size":676,"mtime":1637793776963,"results":"16","hashOfConfig":"17"},{"size":1127,"mtime":1637793776964,"results":"18","hashOfConfig":"17"},{"size":76,"mtime":1637480267458,"results":"19","hashOfConfig":"17"},{"size":655,"mtime":1637787617434,"results":"20","hashOfConfig":"17"},{"size":64,"mtime":1637496480111,"results":"21","hashOfConfig":"17"},{"size":633,"mtime":1637490811389,"results":"22","hashOfConfig":"17"},{"size":68,"mtime":1637787617434,"results":"23","hashOfConfig":"17"},{"size":126,"mtime":1637793776964,"results":"24","hashOfConfig":"17"},{"size":581,"mtime":1637793776964,"results":"25","hashOfConfig":"17"},{"size":2343,"mtime":1637799313136,"results":"26","hashOfConfig":"17"},{"size":68,"mtime":1637787617434,"results":"27","hashOfConfig":"17"},{"size":3268,"mtime":1637796753246,"results":"28","hashOfConfig":"17"},{"size":62,"mtime":1637787617434,"results":"29","hashOfConfig":"17"},{"size":2053,"mtime":1637592278613,"results":"30","hashOfConfig":"17"},{"size":1255,"mtime":1637367920636,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"1hzye2k",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/App.tsx",["69","70"],"import React, { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSetRecoilState } from 'recoil';\n\nimport { getApps } from 'lib-api/src/catalog';\n\nimport '$/App.scss';\nimport Layout from '$/containers/Layout';\nimport { AppListState } from '$/store/catalog/atoms';\n\nconst App = (): JSX.Element => {\n  const setAppList = useSetRecoilState(AppListState);\n\n  const fetchAppList = async () => {\n    setAppList(await getApps());\n  };\n\n  useEffect(() => {\n    void fetchAppList();\n  }, []);\n\n  return (\n    <main>\n      <Layout />\n\n      <ToastContainer />\n    </main>\n  );\n};\n\nexport default App;\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/components/SiteHeader/SiteHeader.tsx",["71"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useNavigate } from 'react-router-dom';\n// eslint-disable-next-line import/named,ordered-imports/ordered-imports\nimport Select, { SingleValue } from 'react-select';\nimport { useRecoilValue } from 'recoil';\n\nimport { AppRoutes } from '$/router/routes';\nimport { AppNameSelector } from '$/store/catalog/selectors';\nimport './SiteHeader.scss';\n\nexport function SiteHeader(): JSX.Element {\n  const { t } = useTranslation(['Global']);\n  const navigate = useNavigate();\n\n  const appList = useRecoilValue(AppNameSelector);\n\n  const handleAppSearch = (\n    item: SingleValue<{ label: string | undefined; value: string | undefined }>,\n  ) => {\n    if (item && item.value) {\n      navigate(`/app/${item.value}`);\n    }\n  };\n\n  return (\n    <nav className=\"site-header\">\n      <NavLink to={`/${AppRoutes.AppList}`}>\n        <h2>{t('Global.appName')}</h2>\n      </NavLink>\n\n      <Select\n        className=\"site-header__search\"\n        options={appList}\n        placeholder={'Search'}\n        onChange={handleAppSearch}\n      />\n    </nav>\n  );\n}\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/components/SiteHeader/index.ts",[],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/containers/Layout/Layout.tsx",["72"],"import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport SiteHeader from '$/components/SiteHeader';\nimport { AppRoutes } from '$/router/routes';\nimport AppDetail from '$/views/AppDetail';\nimport AppList from '$/views/AppList';\nimport './Layout.scss';\n\nexport function Layout(): JSX.Element {\n  return (\n    <article className=\"layout\">\n      <SiteHeader />\n\n      <section className=\"layout__screens\">\n        <Routes>\n          <Route element={<AppList />} path={`/${AppRoutes.AppList}`} />\n\n          <Route element={<AppDetail />} path={`/${AppRoutes.AppDetail}`} />\n        </Routes>\n      </section>\n    </article>\n  );\n}\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/containers/Layout/index.ts",[],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/index.tsx",["73"],"import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport setI18n from 'lib-utils/src/i18n';\n\nimport App from '$/App';\n\nexport function Root(): JSX.Element {\n  return (\n    <React.StrictMode>\n      <RecoilRoot>\n        <Router>\n          <Suspense fallback={null}>\n            <App />\n          </Suspense>\n        </Router>\n      </RecoilRoot>\n    </React.StrictMode>\n  );\n}\n\nsetI18n('Global', true, { en: '0.2' });\n\nconst rootElement = document.querySelector('#root');\nReactDOM.render(<Root />, rootElement);\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/router/routes.ts",[],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/store/catalog/atoms.ts",["74"],"import { atom } from 'recoil';\n\nexport const AppListState = atom<AppCatalog.Catalog[]>({\n  key: 'AppList',\n  default: [],\n});\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/store/catalog/selectors.ts",["75","76"],"import { selector } from 'recoil';\n\nimport { AppListState } from './atoms';\n\nexport const AppNameSelector = selector({\n  key: 'AppNameSelector',\n  get: ({ get }) => {\n    return get(AppListState).map((app) => ({\n      label: app.name,\n      value: app.id,\n    }));\n  },\n});\n\nexport const AppAuthorSelector = selector({\n  key: 'AppAuthorSelector',\n  get: ({ get }) => {\n    const distinctAppAuthors = new Set(\n      get(AppListState).map((app) => app.author),\n    );\n\n    return [...distinctAppAuthors].map((author) => ({\n      label: author,\n      value: author,\n    }));\n  },\n});\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppDetail/AppDetail.tsx",["77","78","79"],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppDetail/index.ts",[],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppList/AppList.tsx",["80"],"import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n// eslint-disable-next-line import/named,ordered-imports/ordered-imports\nimport Select, { MultiValue } from 'react-select';\nimport { useRecoilValue } from 'recoil';\n\nimport { AppListState } from '$/store/catalog/atoms';\nimport { AppAuthorSelector } from '$/store/catalog/selectors';\nimport './AppList.scss';\n\nexport function AppList(): JSX.Element {\n  const { t } = useTranslation(['Global', 'AppList']);\n  const navigate = useNavigate();\n  const [visibleAppList, setVisibleAppList] = useState<AppCatalog.Catalog[]>(\n    [],\n  );\n\n  const appList = useRecoilValue(AppListState);\n  const authorList = useRecoilValue(AppAuthorSelector);\n\n  const handleAuthorSelect = (\n    items: MultiValue<{ label: string | undefined; value: string | undefined }>,\n  ) => {\n    if (items.length === 0) {\n      setVisibleAppList(appList);\n      return;\n    }\n    setVisibleAppList(\n      appList.filter((app) => {\n        return items.map((item) => item.value).includes(app.author);\n      }),\n    );\n  };\n\n  useEffect(() => {\n    setVisibleAppList(appList);\n  }, [appList]);\n\n  return (\n    <article className=\"app-list\">\n      <h2>{t('AppList.header')}</h2>\n\n      <section className=\"app-list__filters\">\n        <Select\n          isMulti\n          className=\"filter\"\n          options={authorList}\n          placeholder={'Filter by Author'}\n          onChange={handleAuthorSelect}\n        />\n      </section>\n\n      <section className=\"app-list__tiles\">\n        {visibleAppList.length > 0 &&\n          visibleAppList.map((app, appIndex) => {\n            return (\n              // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n              <div\n                key={appIndex}\n                className=\"ac-tile\"\n                // TODO: use AppRoutes enum.\n                onClick={() => navigate(`/app/${app.id}`)}\n              >\n                <div className=\"ac-tile__header\">\n                  {app.iconURL && (\n                    <img alt={app.iconURL} className=\"icon\" src={app.iconURL} />\n                  )}\n\n                  <p className=\"title\">{app.name}</p>\n                </div>\n\n                <div className=\"ac-tile__details\">\n                  <p>Description: {app.description}</p>\n\n                  {app.author && <p>Author: {app.author}</p>}\n                </div>\n\n                <div className=\"ac-tile__chips\">\n                  {app.url ? (\n                    <span className=\"chip chip--available\">URL available</span>\n                  ) : (\n                    <span className=\"chip chip--unavailable\">\n                      URL unavailable\n                    </span>\n                  )}\n\n                  {app.readmeURL ? (\n                    <span className=\"chip chip--available\">\n                      ReadMe Available\n                    </span>\n                  ) : (\n                    <span className=\"chip chip--unavailable\">\n                      ReadMe Unavailable\n                    </span>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n      </section>\n    </article>\n  );\n}\n","/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/src/views/AppList/index.ts",[],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/webpack.development.config.ts",[],"/Users/akashmanjunath/workspace_interviews/app-catalog/packages/frontend/ui-app-catalog/webpack.production.config.ts",[],{"ruleId":"81","severity":1,"message":"82","line":12,"column":7,"nodeType":"83","messageId":"84","endLine":12,"endColumn":10},{"ruleId":"85","severity":1,"message":"86","line":21,"column":6,"nodeType":"87","endLine":21,"endColumn":8,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":12,"column":17,"nodeType":"83","messageId":"84","endLine":12,"endColumn":27},{"ruleId":"81","severity":1,"message":"90","line":10,"column":17,"nodeType":"83","messageId":"84","endLine":10,"endColumn":23},{"ruleId":"81","severity":1,"message":"91","line":10,"column":17,"nodeType":"83","messageId":"84","endLine":10,"endColumn":21},{"ruleId":"81","severity":1,"message":"92","line":3,"column":14,"nodeType":"83","messageId":"84","endLine":3,"endColumn":26},{"ruleId":"81","severity":1,"message":"93","line":5,"column":14,"nodeType":"83","messageId":"84","endLine":5,"endColumn":29},{"ruleId":"81","severity":1,"message":"94","line":15,"column":14,"nodeType":"83","messageId":"84","endLine":15,"endColumn":31},{"ruleId":"81","severity":1,"message":"95","line":10,"column":17,"nodeType":"83","messageId":"84","endLine":10,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":14,"column":28,"nodeType":"98","messageId":"99","endLine":14,"endColumn":31,"suggestions":"100"},{"ruleId":"85","severity":1,"message":"101","line":38,"column":6,"nodeType":"87","endLine":38,"endColumn":10,"suggestions":"102"},{"ruleId":"81","severity":1,"message":"103","line":12,"column":17,"nodeType":"83","messageId":"84","endLine":12,"endColumn":24},"@typescript-eslint/naming-convention","Variable name `App` must match one of the following formats: camelCase, UPPER_CASE","Identifier","doesNotMatchFormat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAppList'. Either include it or remove the dependency array.","ArrayExpression",["104"],"Function name `SiteHeader` must match one of the following formats: camelCase","Function name `Layout` must match one of the following formats: camelCase","Function name `Root` must match one of the following formats: camelCase","Variable name `AppListState` must match one of the following formats: camelCase, UPPER_CASE","Variable name `AppNameSelector` must match one of the following formats: camelCase, UPPER_CASE","Variable name `AppAuthorSelector` must match one of the following formats: camelCase, UPPER_CASE","Function name `AppDetail` must match one of the following formats: camelCase","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["105","106"],"React Hook useEffect has a missing dependency: 'fetchAppDetail'. Either include it or remove the dependency array.",["107"],"Function name `AppList` must match one of the following formats: camelCase",{"desc":"108","fix":"109"},{"messageId":"110","fix":"111","desc":"112"},{"messageId":"113","fix":"114","desc":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [fetchAppList]",{"range":"118","text":"119"},"suggestUnknown",{"range":"120","text":"121"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"120","text":"122"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [fetchAppDetail, id]",{"range":"123","text":"124"},[564,566],"[fetchAppList]",[496,499],"unknown","never",[1107,1111],"[fetchAppDetail, id]"]